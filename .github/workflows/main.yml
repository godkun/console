name: console build

on:
  create:
    tags:
      - v*
  workflow_dispatch:

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare release environment
    runs-on: ubuntu-latest
    steps:
      - run: env
  build-gui:
    name: Build gui
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows/amd64
            output: console.exe
          - os: macos-latest
            platform: darwin/universal
            output: console
          # - os: ubuntu-latest
          #   platform: linux/amd64
          #   output: console-linux
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: setup pnpm    
        run: npm install -g pnpm

      - name: wails build
        # uses: dAppServer/wails-build-action@v2            
        uses: dwdcth/wails-build-action@v2.0.5
        with:
          app-working-directory: ./wails
          build-name: ${{ matrix.output }}
          build-platform: ${{ matrix.platform }}
          go-version: 1.20.x
          package: false
          package-macos-exec: true
          package-macos-app: false
          
      # - name: macos act
      #   if: runner.os == 'macOS'
      #   shell: bash
      #   run: |
      #     cd wails
      #     rm -rf ./build/bin/${{ matrix.output }}.app.zip
      #     ditto -c -k --keepParent ./build/bin/${{matrix.output}}.app ./build/bin/${{matrix.output}}.app.zip
      #     rm -rf ./build/bin/${{ matrix.output }}.app

      - name: upload atrifact
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: wails/build/bin/*

  collect-release:
    name: Collect and release
    needs: [build-gui]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch commit messages since last release
        run: |
          # Get current tag
          current_tag=$(git describe --tags --abbrev=0)
          
          # # Get previous tag (latest one before the current one)
          # previous_commit=$(git rev-list --tags --skip=1 --max-count=1)
          # previous_tag=$(git describe --abbrev=0 --tags ${previous_commit})
          
          # # List commits between the previous and current tag
          # commit_messages=$(git log --pretty=format:"- [%s](https://github.com/${{ github.repository }}/commit/%H)" ${previous_tag}..${current_tag})
          commit_messages=$(git log -n 3 --pretty=format:"- [%s](https://github.com/${{ github.repository }}/commit/%H)" ${current_tag})

          # Save commit messages to an output file
          echo "$commit_messages" > commits.txt
          echo "Commit messages since last release:" 
          cat commits.txt
          echo commit_messages_path=$(pwd)/commits.txt >> $GITHUB_ENV
        shell: bash

      - name: download
        uses: actions/download-artifact@v3
        with:
          name: target
          path: target
      
      - name: rename   
        # working-directory: target
        run: |
          cd target
          ls -al
          # cp console.app.zip console_mac.zip
          # cp console.app/Contents/MacOS/console console_mac  
          zip console_windows_amd64.zip console.exe
          # zip console_linux_amd64.zip console-linux
          # zip console_mac.zip console_mac
          rm  -rf console-linux console.exe console.app.zip console.app console.pkg console-amd64-installer.exe console_mac
          cd .. && mv target bin && ls -al


      # release assets
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/*
          body_path: ${{ env.commit_messages_path }}

      # - name: scp
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: console.monibuca.com
      #     username: root
      #     key: ${{ secrets.REMOTE_SERVER_SSH_KEY }}
      #     port: 22
      #     source: "target/*"
      #     target: /usr/local/nginx/html/mb/dist/download
      #     strip_components: 1

      - name: Upload file to bucket
        uses: koraykoska/s3-upload-github-action@master
        env:
          FILE: bin/
          S3_ENDPOINT:  ${{ secrets.S3_API }}
          S3_BUCKET: monibuca
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET }}
